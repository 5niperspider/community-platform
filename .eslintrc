// https://www.robertcooper.me/using-eslint-and-prettier-in-a-typescript-project

{
  "parser": "@typescript-eslint/parser",
  "extends": [
    "plugin:react/recommended", // Uses the recommended rules from @eslint-plugin-react
    "plugin:@typescript-eslint/recommended", // Uses the recommended rules from the @typescript-eslint/eslint-plugin
    "prettier/@typescript-eslint", // Uses eslint-config-prettier to disable ESLint rules from @typescript-eslint/eslint-plugin that would conflict with prettier
    "plugin:prettier/recommended" // Enables eslint-plugin-prettier and eslint-config-prettier. This will display prettier errors as ESLint errors. Make sure this is always the last configuration in the extends array.
  ],
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "rules": {
    "prettier/prettier": "warn",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/no-use-before-define": "off",
    "no-useless-escape": "off",
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-explicit-any": "off",
    "@typescript-eslint/camelcase": "warn",
    "react/no-deprecated": "warn",
    "react/no-unescaped-entities": "off",
    "react/jsx-no-target-blank": "warn",
    "react/display-name": "warn",
    "@typescript-eslint/no-non-null-assertion": "off",
    "@typescript-eslint/no-empty-interface": "warn",
    "react/prop-types": "off",
    "react/no-unknown-property": "warn",
    "@typescript-eslint/no-var-requires": "off",
    "@typescript-eslint/no-namespace": "off"
  }
}
