# Action to allow trigger of the firebase project migration script, used to reset the staging site
# See the migration script file for more information
name: Reset Staging Site
on:
  push:
    branches:
      - feat/dev-backups
  workflow_dispatch:
jobs:
  deploy:
    name: Reset Staging Site
    runs-on: ubuntu-18.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v1
      - uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Set up Cloud SDK
        uses:
          google-github-actions/setup-gcloud@master
          # skipping setting a service account here as we'll manually configure it later
      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - name: Install npm dependencies
        run: yarn install
      - name: Install global dependencies
        run: npm i -g firebase-tools ts-node
      - name: Populate service account json
        run: echo $ONEARMY_MIGRATOR_SERVICE_ACCOUNT_JSON > config/onearmy-migrator-service-account.json
        env:
          ONEARMY_MIGRATOR_SERVICE_ACCOUNT_JSON: ${{secrets.ONEARMY_MIGRATOR_SERVICE_ACCOUNT_JSON}}
      - name: Disable existing firebase functions
        # List all functions availble to gcloud, write to file and read as a list for deletion
        run: |
          echo $(gcloud functions list --format="value(entryPoint)") > functionsList.txt
          functionsList=$(echo $(cat functionsList.txt))
          echo deleting: $functionsList
          firebase functions:delete $(echo $functionsList) --force
      - name: Run db migration script
        run: ts-node --project scripts/tsconfig.json scripts/maintenance/firebase-project-migrate.ts
      - name: Redeploy firebase functions
        run: firebase deploy --only functions
        # TODO - run any migration functions (maybe better elsewhere...)
        # gcloud functions call migrate --data '{"version":"1.3.0"}'
