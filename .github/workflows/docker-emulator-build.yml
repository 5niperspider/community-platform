# Build docker container for development emulators
name: Docker Emulator Build
on:
  push:
    branches:
      - spike/docker-emulators
    # Only create a preview if changes have been made to the emulators-docker workspace
    paths:
      - "packages/emulators-docker/**"
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: onearmy/community-platform-emulator
jobs:
  build_and_preview:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Check metadata
        run: echo ${{steps.meta.outputs}}
      - uses: actions/setup-node@v2
        with:
          node-version: "16"

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn config get cacheFolder)"
        # Setup yarn 2 cache: https://github.com/actions/cache/blob/main/examples.md#node---yarn
      - name: Setup Cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install npm dependencies
        run: yarn install --immutable
      - name: Set environment variables
        run: export REACT_APP_PROJECT_VERSION=${GITHUB_SHA}
      - name: Check environment variables
        run: echo $REACT_APP_PROJECT_VERSION
      - name: Prepare Build
        run: yarn workspace oa-emulators-docker prepare

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: packages/emulators-docker
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha, scope=${{ github.workflow }}
          cache-to: type=gha, scope=${{ github.workflow }}, mode=max
